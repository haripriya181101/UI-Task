@use "sass:map";
@use "sass:math";
@use "./colors" as *;
@use "./font" as *;

// ----
// REM conversion functions
// ----

$rem-base: 16px !default;

@function strip-unit($num) {
  @return math.div($num, $num * 0 + 1);
}

@function convert-to-rem($value, $base-value: $rem-base) {
  @if unit($value) == "" {
    $value: $value * 1px; // Default to px if no unit
  }

  // Convert value from px to rem
  $value: math.div(strip-unit($value), strip-unit($base-value)) * 1rem;

  // If value is 0, return 0
  @if $value == 0rem {
    $value: 0;
  }

  @return $value;
}

@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);
  // If there's only one value, just convert that
  @if $max == 1 {
    @return convert-to-rem(nth($values, 1), $base-value);
  }

  // If there are multiple values, convert each to rem
  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append(
      $remValues,
      convert-to-rem(nth($values, $i), $base-value)
    );
  }

  @return $remValues;
}

// Font Size Map
$font-size: (
  html: 16px,
  body: rem-calc(18),
  font-size-6: rem-calc(6),
  font-size-9: rem-calc(9),
  font-size-10: rem-calc(10),
  font-size-12: rem-calc(12),
  font-size-13: rem-calc(13),
  font-size-14: rem-calc(14),
  font-size-16: rem-calc(16),
  font-size-15: rem-calc(15),
  font-size-18: rem-calc(18),
  font-size-20: rem-calc(20),
  font-size-22: rem-calc(22),
  font-size-24: rem-calc(24),
  font-size-25: rem-calc(25),
  font-size-32: rem-calc(32),
  font-size-33: rem-calc(33),
  font-size-40: rem-calc(40),
  font-size-48: rem-calc(48),
  font-size-50: rem-calc(50),
  font-size-56: rem-calc(56),
  font-size-63: rem-calc(63),
  font-size-65: rem-calc(65),
  font-size-75: rem-calc(75),
  font-size-96: rem-calc(96),
  font-size-120: rem-calc(120),
  /* base font size. Do not touch if you don't know what you're doing */ size-20:
    rem-calc(20),
);
@function font-family($name) {
  @return map-get($font-family, $name);
}

@function font-size($key) {
  @return map-get($font-size, $key);
}

@function font-weight($name) {
  @return map-get($font-weight, $name);
}
@function pantone($name) {
  @return map-get($pantone, $name);
}
@function color($name) {
  @return map-get($color, $name);
}

@function background($key) {
  @return map-get($background, $key);
}

@function border($name) {
  @return map-get($border, $name);
}

// ----
// Mixin for REM conversion
// ----

@mixin rem($properties, $values...) {
  // If $properties is a map, loop through and convert each property
  @if type-of($properties) == "map" {
    @each $property in map-keys($properties) {
      @include rem($property, map-get($properties, $property));
    }
  } @else {
    // If $properties is a list, convert each property to rem
    @each $property in $properties {
      #{$property}: rem-calc($values...);
    }
  }
}
